<?xml version="1.0"?>
<launch>
  <arg name="mapname" default="unity_scene_map" />
  <arg name="mapfolder" default="$(find asl_pepper_gmapping)/../maps"/>
  <arg name="script_args" default=""/>
  <arg name="ia_downsampling_passes" default="2"/>
  <arg name="localization" default="false"/>  <!-- if disabled uses g.t. loc from sim -->
  <arg name="scenario" default="unitytest"/>
  <arg name="max_runtime" default="300" />

  <!-- sim -->
  <include file="$(find ia_ros)/launch/ros_sim_node.launch">
    <arg name="rviz" value="false" />
    <arg name="output" value="screen" />
    <arg name="mapname" value="$(arg mapname)" />
    <arg name="mapfolder" value="$(arg mapfolder)" />
    <arg name="script_args" 
      value="--cmd_vel --delay-start --shutdown-on-success --max-runtime $(arg max_runtime) --map-downsampling-passes $(arg ia_downsampling_passes) --realtime --scenario $(arg scenario) --plan-async --naive-plan --dt 0.05" />
  </include>

  <!-- Gmapping & Map Matching -->
  <include file="$(find asl_pepper_gmapping)/launch/gmapping.launch" >
    <arg name="output" value="log"/>
  </include>
  <include file="$(find map_matcher)/launch/map_matcher.launch" if="$(arg localization)">
    <arg name="output" value="log" />
    <arg name="slam_map_topic" value="/gmap"/>
    <arg name="reference_map_name" value="$(arg mapname)"/>
    <arg name="reference_map_downsampling_passes" value="$(arg ia_downsampling_passes)"/>
    <arg name="maps_folder" value="$(arg mapfolder)"/>
    <arg name="launch_prefix" value="nice -n 20" />
  </include>
  <!-- Otherwise just publish reference map -->
  <node pkg="map_server" type="map_server" name="ref_map_server"
    args="$(arg mapfolder)/$(arg mapname).yaml" if="$(eval arg('localization') != true)">
    <param name="frame_id" value="reference_map" />
    <remap from="/map" to="/reference_map"/>
  </node>

  <!-- ia planner -->
  <node pkg="ia_ros" type="ros_ia_node" name="ia_planner" output="screen"
    args="--no-stop $(arg script_args)" launch-prefix="" respawn="true">
    <remap from="/tracked_persons" to="/rwth_tracker/tracked_persons" />
    <param name="reference_map_name" value="$(arg mapname)"/>
    <param name="reference_map_folder" value="$(arg mapfolder)"/>
    <param name="reference_map_downsampling_passes" value="$(arg ia_downsampling_passes)"/>
    <param name="reference_map_frame" value="sim_map" if="$(eval not arg('localization'))"/>
  </node>

  <!-- Skill Planners -->
  <!-- _________________________________________________________________________________ -->

  <!-- Responsive -->
  <param name="/robot_comfort_radius" value="0.5" />
  <node pkg="responsive" type="responsive" name="responsive" output="screen"
    args="--forward-only" >
    <remap from="/stop_autonomous_motion" to="/responsive/stop_autonomous_motion" />
    <remap from="/resume_autonomous_motion" to="/responsive/resume_autonomous_motion" />
    <remap from="/global_planner/current_waypoint" to="/responsive/waypoint" />
  </node>

  <!-- RVO Planner -->
  <node pkg="asl_pepper_motion_planning" type="rvo_planner" name="rvo_planner" output="screen"
    args=""  >
<!--      launch-prefix="python -m cProfile -o /tmp/rvo_planner.prof " -->
    <param name="reference_map_name" value="/gmap"/>
    <param name="reference_map_folder" value="rostopic"/>
    <param name="reference_map_frame" value="gmap"/>
<!--     <param name="reference_map_name" value="$(arg mapname)"/> -->
<!--     <param name="reference_map_folder" value="$(arg mapfolder)"/> -->
<!--     <param name="reference_map_frame" value="reference_map"/> -->
    <param name="fixed_frame" value="odom"/>
    <param name="reference_map_downsampling_passes" value="1" />
    <param name="static_obstacles_max_distance" value="2" />
    <remap from="/stop_autonomous_motion" to="/rvo_planner/stop_autonomous_motion" />
    <remap from="/resume_autonomous_motion" to="/rvo_planner/resume_autonomous_motion" />
    <remap from="/global_planner/current_waypoint" to="/rvo_planner/waypoint" />
  </node>

</launch>


